#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
استعادة محتوى الدروس وإضافة بنوك الأسئلة المخصصة
"""

import os
import re
import glob

# بنوك الأسئلة لكل درس
question_banks = {
    "unit-1-cells/lesson-1-1": [
        {
            "q": "أي تركيب يوجد في الخلايا النباتية فقط؟",
            "c": ["الميتوكندريا", "الجدار الخلوي", "الغشاء الخلوي", "السيتوبلازم"],
            "a": 1
        },
        {
            "q": "وظيفة البلاستيدات الخضراء:",
            "c": ["التنفس الخلوي", "التمثيل الضوئي", "تخزين الماء", "إفراز الهرمونات"],
            "a": 1
        },
        {
            "q": "تركيب يوجد في كلٍّ من الخلايا النباتية والحيوانية:",
            "c": ["جدار خلوي", "بلاستيدات", "نواة", "كلوروفيل"],
            "a": 2
        },
        {
            "q": "العُضيّة المسؤولة عن إنتاج معظم طاقة الخلية:",
            "c": ["الميتوكندريا", "الليسوسومات", "جهاز جولجي", "الفجوة"],
            "a": 0
        },
        {
            "q": "الفجوة العصارية الكبيرة في الخلايا النباتية تساعد على:",
            "c": ["التنفس", "ثبات الخلية بتوليد ضغط الامتلاء وتخزين الماء", "بناء البروتين", "تكسير السموم"],
            "a": 1
        },
    ],
    
    "unit-1-cells/lesson-1-2": [
        {
            "q": "التكبير الكلي للمجهر يُحسب بـ:",
            "c": ["ضرب تكبير العدسة العينية × تكبير العدسة الشيئية", "جمع العدستين", "قسمة العينية على الشيئية", "طرح العدستين"],
            "a": 0
        },
        {
            "q": "عند رسم الخلية علمياً، يجب:",
            "c": ["استخدام الألوان فقط", "رسم خطوط واضحة بالقلم الرصاص مع تسميات", "رسم الظلال", "استخدام الحبر الملون"],
            "a": 1
        },
        {
            "q": "إذا كان تكبير العدسة العينية 10× والشيئية 40×، فالتكبير الكلي:",
            "c": ["50×", "400×", "30×", "4×"],
            "a": 1
        },
        {
            "q": "عند زيادة التكبير في المجهر:",
            "c": ["يزداد الضوء تلقائياً", "تقل كمية الضوء المطلوبة", "تزداد الحاجة لضوء أكثر", "لا يتغير شيء"],
            "a": 2
        },
        {
            "q": "أهم قاعدة عند رسم الخلايا:",
            "c": ["الرسم السريع", "النسب الصحيحة والتسميات الواضحة", "استخدام عدة ألوان", "الرسم بخط عريض"],
            "a": 1
        }
    ],
    
    "unit-2-transport/lesson-2-1": [
        {
            "q": "الانتشار هو حركة الجزيئات من منطقة:",
            "c": ["تركيز منخفض إلى عالي", "تركيز عالي إلى منخفض", "باردة إلى ساخنة", "حمضية إلى قاعدية"],
            "a": 1
        },
        {
            "q": "الانتشار عملية:",
            "c": ["تحتاج طاقة", "لا تحتاج طاقة (سلبية)", "تحتاج إنزيمات", "تحتاج هرمونات"],
            "a": 1
        },
        {
            "q": "أي من التالي مثال على الانتشار:",
            "c": ["ضخ القلب للدم", "انتشار العطر في الغرفة", "هضم الطعام", "تقلص العضلات"],
            "a": 1
        },
        {
            "q": "العوامل المؤثرة على سرعة الانتشار تشمل:",
            "c": ["فرق التركيز والحرارة", "اللون فقط", "عدد الخلايا", "نوع الطعام"],
            "a": 0
        },
        {
            "q": "الانتشار البسيط يحدث عبر:",
            "c": ["بروتينات ناقلة", "الغشاء الخلوي مباشرة", "فقط المسام النووية", "الميتوكندريا"],
            "a": 1
        }
    ],
    
    "unit-2-transport/lesson-2-2": [
        {
            "q": "النباتات تحصل على الماء عبر:",
            "c": ["الأوراق فقط", "الشعيرات الجذرية", "الساق فقط", "الثمار"],
            "a": 1
        },
        {
            "q": "الخشب في النبات يقوم بـ:",
            "c": ["نقل السكريات", "نقل الماء والأملاح", "التنفس", "التكاثر"],
            "a": 1
        },
        {
            "q": "اللحاء يحمل:",
            "c": ["الماء فقط", "الأملاح فقط", "السكريات والمواد الغذائية", "الأكسجين"],
            "a": 2
        },
        {
            "q": "الشعيرات الجذرية تزيد:",
            "c": ["سمك الجذر", "مساحة السطح لامتصاص الماء", "قوة الجذر", "طول النبات"],
            "a": 1
        },
        {
            "q": "النتح يساعد في:",
            "c": ["سحب الماء لأعلى في النبات", "تكوين البذور", "نمو الجذور", "تكوين الأزهار"],
            "a": 0
        }
    ]
}

def create_question_bank_js(questions):
    """تحويل قائمة الأسئلة إلى JavaScript"""
    js_questions = []
    for q in questions:
        choices_str = '", "'.join(q['c'])
        js_questions.append(f'{{q:"{q["q"]}", c:["{choices_str}"], a:{q["a"]}}}')
    
    return f"const bank = [\n      " + ",\n      ".join(js_questions) + "\n    ];"

def add_questions_to_lesson(file_path, lesson_key):
    """إضافة الأسئلة إلى ملف الدرس"""
    try:
        with open(file_path, 'r', encoding='utf-8') as f:
            content = f.read()
        
        # التحقق من وجود بنك الأسئلة
        if 'const bank = [' in content:
            print(f"✅ {lesson_key} - بنك الأسئلة موجود مسبقاً")
            return False
        
        # البحث عن الموقع المناسب لإدراج بنك الأسئلة
        insert_point = content.find('const el = {')
        
        if insert_point == -1:
            print(f"❌ {lesson_key} - لم يتم العثور على نقطة الإدراج")
            return False
            
        # إنشاء بنك الأسئلة
        if lesson_key not in question_banks:
            print(f"⚠️  {lesson_key} - لا يوجد بنك أسئلة محدد")
            return False
            
        questions_js = create_question_bank_js(question_banks[lesson_key])
        
        # إدراج بنك الأسئلة
        new_content = (
            content[:insert_point] + 
            f"// بنك الأسئلة المخصص للدرس\n    {questions_js}\n\n    " +
            content[insert_point:]
        )
        
        # إنشاء نسخة احتياطية
        backup_path = file_path + '.backup_restore'
        with open(backup_path, 'w', encoding='utf-8') as f:
            f.write(content)
            
        # كتابة المحتوى الجديد
        with open(file_path, 'w', encoding='utf-8') as f:
            f.write(new_content)
            
        print(f"🔧 {lesson_key} - تم إضافة {len(question_banks[lesson_key])} سؤال")
        return True
        
    except Exception as e:
        print(f"❌ خطأ في معالجة {lesson_key}: {e}")
        return False

def main():
    """الدالة الرئيسية"""
    print("🔧 بدء استعادة محتوى الدروس...")
    print("=" * 60)
    
    fixed_count = 0
    
    # معالجة الدروس المحددة
    for lesson_key in question_banks.keys():
        file_path = f"{lesson_key}/index.html"
        if os.path.exists(file_path):
            if add_questions_to_lesson(file_path, lesson_key):
                fixed_count += 1
        else:
            print(f"❌ {lesson_key} - الملف غير موجود")
    
    print()
    print("=" * 60)
    print(f"✅ تم الانتهاء! تم إصلاح {fixed_count} درس")
    
    if fixed_count > 0:
        print()
        print("🎯 الخطوات التالية:")
        print("   1. اختبر الدروس في المتصفح")
        print("   2. ارفع التغييرات على GitHub")
        print("   3. النسخ الاحتياطية محفوظة بامتداد .backup_restore")

if __name__ == "__main__":
    main()