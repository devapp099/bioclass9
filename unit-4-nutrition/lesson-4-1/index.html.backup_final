<!DOCTYPE html>
<html lang="ar" dir="rtl">
<head>
  <title>🧪 درس 4-1 — النظام الغذائي</title>
  
  <meta charset="utf-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1" />
  <link href="https://fonts.googleapis.com/css2?family=Cairo:wght@500;700;900&display=swap" rel="stylesheet" />

  <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
  <script src="https://cdn.jsdelivr.net/npm/canvas-confetti@1.9.3/dist/confetti.browser.min.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/gsap@3.12.5/dist/gsap.min.js"></script>
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/aos@2.3.4/dist/aos.css"/>
  <script src="https://cdn.jsdelivr.net/npm/aos@2.3.4/dist/aos.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/howler@2.2.4/dist/howler.min.js"></script>

  <script>

    const SoundSystem = {
      enabled: true,
      currentVolume: 0.7,
      sounds: {},
      
      init() {
        const soundTypes = ['correct', 'wrong', 'click', 'select', 'milestone', 'celebration', 'complete', 'start', 'welcome', 'progress'];
        const soundMappings = {
          'correct': 'win.mp3',
          'wrong': 'wrong_answer.mp3', 
          'click': 'Click.mp3',
          'select': 'select.mp3',
          'milestone': 'g.mp3',
          'celebration': 'win-Blockbusters.mp3',
          'complete': 'end-timer.mp3',
          'start': 'start-timer.mp3',
          'welcome': 'name-start.mp3',
          'progress': 'Notification.mp3'
        };
        
        soundTypes.forEach(type => {
          this.sounds[type] = new Howl({
            src: [`../../assets/audio/${soundMappings[type]}`],
            volume: this.getContextualVolume(type),
            preload: true,
            onloaderror: () => {
              console.warn(`فشل تحميل الصوت: ${type}`);
            }
          });
        });
        
        console.log('🎵 تم تهيئة النظام الصوتي المحسّن');
      },
      
      play(soundType) {
        if (!this.enabled || !this.sounds[soundType]) return;
        
        try {
          const contextualVolume = this.getContextualVolume(soundType);
          this.sounds[soundType].volume(contextualVolume);
          this.sounds[soundType].play();
          this.trackSoundUsage(soundType);
        } catch (error) {
          console.warn(`خطأ في تشغيل الصوت ${soundType}:`, error);
        }
      },
      
      getContextualVolume(soundType) {
        const contextMap = {
          'celebration': 0.9,
          'milestone': 0.8,
          'correct': 0.7,
          'welcome': 0.6,
          'wrong': 0.5,
          'progress': 0.4,
          'click': 0.4,
          'select': 0.3
        };
        return contextMap[soundType] || this.currentVolume;
      },
      
      trackSoundUsage(soundType) {
        if (!window.soundStats) window.soundStats = {};
        window.soundStats[soundType] = (window.soundStats[soundType] || 0) + 1;
      },
      
      sequence(sounds, delay = 500) {
        sounds.forEach((sound, index) => {
          setTimeout(() => {
            this.play(sound);
            if (sound === 'celebration' && typeof confetti !== 'undefined') {
              confetti({
                particleCount: 50,
                spread: 60,
                origin: { y: 0.8 }
              });
            }
          }, index * delay);
        });
      },
      
      toggle() {
        this.enabled = !this.enabled;
        return this.enabled;
      }
    };


    const EnhancedNotificationSystem = {
      student: null,
      
      lessonInfo: {
        title: "درس تفاعلي",
        description: "تعلم المفاهيم الأساسية بطريقة تفاعلية",
        keyConcepts: ["المفاهيم الأساسية"],
        topic: "biology"
      },
      interactionStats: {
        clicks: 0,
        correctAnswers: 0,
        wrongAnswers: 0,
        timeSpent: 0
      },
      
      showWelcomeMessage() {
        const welcomeMessages = [
          "🎓 أهلاً وسهلاً {name}! مرحبًا بك في هذا الدرس المثير!",
          "🌟 مرحبًا {name}! أنت على وشك تعلم شيء رائع!",
          "✨ أهلاً {name}! دعنا نتعلم العلوم معًا!"
        ];
        
        const randomWelcome = welcomeMessages[Math.floor(Math.random() * welcomeMessages.length)];
        const personalizedWelcome = randomWelcome.replace('{name}', this.student?.name || 'البطل/ة');
        const lessonIntro = `📚 ستتعلم اليوم: ${this.lessonInfo.description}`;
        
        Swal.fire({
          title: '🎓 مرحباً بك في رحلة التعلم!',
          html: `
            <div style="text-align:right;line-height:1.8;font-size:16px">
              <div style="background:linear-gradient(135deg,#667eea 0%,#764ba2 100%);color:white;padding:15px;border-radius:12px;margin-bottom:15px">
                ${personalizedWelcome}
              </div>
              <div style="background:#f8f9ff;padding:15px;border-radius:10px;border-right:4px solid #667eea">
                ${lessonIntro}
              </div>
            </div>`,
          icon: 'info',
          confirmButtonText: '🚀 لنبدأ التعلم!',
          confirmButtonColor: '#667eea',
          timer: 8000,
          timerProgressBar: true
        }).then(() => {
          SoundSystem.play('start');
          this.startSessionTimer();
        });
      },
      
      startSessionTimer() {
        this.sessionStartTime = Date.now();
        this.timerInterval = setInterval(() => {
          this.interactionStats.timeSpent = Math.floor((Date.now() - this.sessionStartTime) / 1000);
        }, 1000);
      },
      
      initForStudent(studentData) {
        this.student = studentData;
        this.showWelcomeMessage();
        console.log(`🤖 تم تفعيل النظام الذكي للطالب: ${studentData.name}`);
      }
    };


    function getPerformanceLevel(percentage) {
      if (percentage >= 90) return 'excellent';
      if (percentage >= 75) return 'good';
      if (percentage >= 60) return 'average';
      return 'needsWork';
    }

    function getFinalResultMessage(percentage, studentName) {
      const name = studentName || 'البطل/ة';
      const messages = {
        excellent: [
          `🏆 مبروك ${name}! أداء استثنائي - أنت عالم/ة حقيقي/ة!`,
          `⭐ رائع جداً ${name}! إتقان كامل للموضوع - فخور بك!`,
          `🌟 مذهل ${name}! نتيجة تستحق التقدير والاحترام!`
        ],
        good: [
          `👏 أحسنت ${name}! أداء جيد جداً - على الطريق الصحيح!`,
          `💪 عمل ممتاز ${name}! تحسن واضح وأداء مميز!`,
          `🎯 رائع ${name}! يظهر فهماً جيداً للموضوع`
        ],
        average: [
          `📚 أداء جيد ${name}! مراجعة بسيطة وستكون في القمة!`,
          `🎯 استمر ${name}! بداية جيدة للإتقان`,
          `💡 جيد ${name}! مع قليل من المراجعة ستصل للتميز`
        ],
        needsWork: [
          `💚 لا بأس ${name}! بداية التعلم - لا تستسلم!`,
          `🌱 استمر في المحاولة ${name}! كل عالم عظيم بدأ من هنا`,
          `🤝 معاً سنصل للهدف ${name}! المثابرة هي سر النجاح`
        ]
      };
      
      const level = getPerformanceLevel(percentage);
      const levelMessages = messages[level];
      return levelMessages[Math.floor(Math.random() * levelMessages.length)];
    }

    function showEncouragementMessage(type) {
      const s = getStudent();
      const name = s?.name || 'البطل/ة';
      
      const messages = {
        correct: [
          `ممتاز ${name}! إجابة صحيحة رائعة! 🌟`,
          `أحسنت ${name}! أنت تتقدم بشكل ممتاز! 👏`,
          `رائع ${name}! استمر على هذا الأداء المميز! 🚀`
        ],
        wrong: [
          `لا بأس ${name}، المحاولة جزء من التعلم! 💪`,
          `فكر مرة أخرى ${name}، أنت قريب من الإجابة الصحيحة! 🤔`,
          `استمر في المحاولة ${name}، كل خطأ فرصة للتعلم! 🌱`
        ]
      };
      
      const messageList = messages[type] || messages['correct'];
      const randomMessage = messageList[Math.floor(Math.random() * messageList.length)];
      
      Swal.fire({
        title: type === 'correct' ? '🎉 أحسنت!' : '💪 استمر!',
        text: randomMessage,
        icon: type === 'correct' ? 'success' : 'info',
        timer: 3000,
        timerProgressBar: true,
        toast: true,
        position: 'top-end',
        showConfirmButton: false
      });
    }

    function celebrate(){
      const duration = 1500; 
      const end = Date.now() + duration;
      (function frame(){
        confetti({ particleCount: 3, angle: 60, spread: 70, origin: { x: 0 } });
        confetti({ particleCount: 3, angle: 120, spread: 70, origin: { x: 1 } });
        if (Date.now() < end) requestAnimationFrame(frame);
      })();
    }


    // تهيئة الأنظمة عند تحميل الصفحة
    document.addEventListener('DOMContentLoaded', function() {
      SoundSystem.init();
      console.log('🎵 تم تهيئة النظام الصوتي المحسّن');
      console.log('🤖 تم تهيئة نظام الرسائل التفاعلية الذكية');
    });
  </script>

  <style>
    :root{
      --bg:linear-gradient(135deg, #667eea 0%, #764ba2 50%, #f093fb 100%); --card:#ffffff; --muted:#6b7280; --text:#1f2937;
      --primary:#f59e0b; --primary-2:#d97706; --accent:#ef4444;
      --success:#10b981; --warn:#f59e0b; --danger:#ef4444; --ring:rgba(245,158,11,.4);
      --card-shadow:0 20px 40px rgba(0,0,0,.1), 0 8px 16px rgba(0,0,0,.08);
    }
    *{box-sizing:border-box}
    html,body{height:100%}
    body{
      margin:0; background: var(--bg);
      min-height:100vh;
      color:var(--text); font-family:"Cairo", system-ui, sans-serif; line-height:1.7; letter-spacing:.2px;
      position: relative;
    }
    body::before {
      content: '';
      position: fixed;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      background: 
        radial-gradient(circle at 20% 80%, rgba(255,165,0,.15) 0%, transparent 50%),
        radial-gradient(circle at 80% 20%, rgba(255,69,0,.12) 0%, transparent 50%),
        radial-gradient(circle at 40% 40%, rgba(255,20,147,.1) 0%, transparent 50%);
      z-index: -1;
      pointer-events: none;
    }
    .wrap{max-width:1100px; margin-inline:auto; padding:24px}
    header{
      display:flex; align-items:center; justify-content:space-between; gap:12px; padding:18px 22px;
      border:1px solid rgba(255,255,255,.3);
      background:linear-gradient(135deg, rgba(255,255,255,.95) 0%, rgba(255,255,255,.85) 100%);
      border-radius:20px; backdrop-filter: blur(10px); position:sticky; top:16px; z-index:10;
      box-shadow: var(--card-shadow);
    }
    .brand{display:flex; align-items:center; gap:12px}
    .logo{width:42px; height:42px; border-radius:12px;
      background: conic-gradient(from 200deg, var(--primary), var(--accent), #10b981, #3b82f6);
      box-shadow: 0 8px 24px rgba(245,158,11,.35);
      animation: logoRotate 20s linear infinite;
    }
    @keyframes logoRotate { from { transform: rotate(0deg); } to { transform: rotate(360deg); } }
    .title{font-weight:900; font-size:clamp(20px,3vw,28px)}
    .subtitle{font-weight:700; font-size:clamp(14px,2vw,16px); color:var(--muted)}
    .card{
      background: linear-gradient(135deg, rgba(255,255,255,.95) 0%, rgba(255,255,255,.85) 100%);
      border:1px solid rgba(255,255,255,.4);
      border-radius:22px; padding:22px;
      box-shadow: var(--card-shadow);
      transition: all 0.3s ease;
    }
    .card:hover {
      transform: translateY(-2px);
      box-shadow: 0 25px 50px rgba(0,0,0,.12), 0 12px 20px rgba(0,0,0,.1);
    }
    h1{
      font-size: clamp(28px,4vw,40px);
      margin: 0 0 6px;
      font-weight: 900;
      background: linear-gradient(135deg, var(--primary) 0%, var(--accent) 50%, #10b981 100%);
      -webkit-background-clip: text;
      -webkit-text-fill-color: transparent;
      background-clip: text;
    }
    h2{font-size:clamp(24px,3.5vw,32px); margin:0 0 12px; font-weight:800; color:var(--text)}
    .lead{font-size:clamp(16px,2.2vw,20px); color:var(--muted); margin-bottom:16px; line-height:1.6}
    ul{padding-right:20px}
    li{margin-bottom:8px; line-height:1.6}
    .btn{
      background: linear-gradient(135deg, var(--primary) 0%, var(--primary-2) 100%);
      color: white; border: none; padding: 12px 24px; border-radius: 12px;
      font-size: 16px; font-weight: 700; cursor: pointer; transition: all 0.3s ease;
      font-family: inherit; text-decoration: none; display: inline-block;
      box-shadow: 0 4px 12px rgba(245,158,11,.3);
    }
    .btn:hover{
      transform: translateY(-2px);
      box-shadow: 0 8px 20px rgba(245,158,11,.4);
    }
    .btn-ghost{
      background: transparent; color: var(--muted);
      border: 2px solid rgba(107,114,128,.3); padding: 10px 22px;
      border-radius: 12px; font-size: 16px; font-weight: 600;
      cursor: pointer; transition: all 0.3s ease;
      font-family: inherit; text-decoration: none; display: inline-block;
    }
    .btn-ghost:hover{
      border-color: var(--primary);
      color: var(--primary);
      transform: translateY(-1px);
    }
    .q{
      background: rgba(255,255,255,.6);
      border: 1px solid rgba(255,255,255,.8);
      border-radius: 16px; padding: 20px; margin: 16px 0;
      transition: all 0.3s ease;
    }
    .q:hover{
      background: rgba(255,255,255,.8);
      transform: translateY(-1px);
    }
    .choices{display:flex; flex-direction:column; gap:12px; margin-top:16px}
    .choice{
      background: rgba(255,255,255,.8);
      border: 2px solid rgba(255,255,255,.6);
      border-radius: 12px; padding: 14px 18px;
      cursor: pointer; transition: all 0.3s ease;
      font-weight: 600;
    }
    .choice:hover{
      background: rgba(245,158,11,.1);
      border-color: var(--primary);
      transform: translateX(4px);
    }
    .choice.correct{
      background: linear-gradient(135deg, rgba(16,185,129,.15) 0%, rgba(16,185,129,.05) 100%);
      border-color: var(--success);
      color: var(--success);
    }
    .choice.wrong{
      background: linear-gradient(135deg, rgba(239,68,68,.15) 0%, rgba(239,68,68,.05) 100%);
      border-color: var(--danger);
      color: var(--danger);
    }
    .progress{display:flex; align-items:center; gap:12px; margin-top:12px}
    .bar{
      flex:1; height:8px; background:rgba(255,255,255,.6);
      border-radius:4px; overflow:hidden;
    }
    .bar span{
      display:block; height:100%; width:0%;
      background:linear-gradient(90deg, var(--primary) 0%, var(--success) 100%);
      transition: width 0.6s ease;
    }
    .pulse{
      position: absolute; top: -20px; right: -20px;
      width: 60px; height: 60px;
      background: radial-gradient(circle, var(--primary) 0%, transparent 70%);
      border-radius: 50%;
      animation: pulse 2s infinite;
      opacity: 0.7;
    }
    @keyframes pulse {
      0% { transform: scale(0.8); opacity: 0.7; }
      50% { transform: scale(1.2); opacity: 0.3; }
      100% { transform: scale(0.8); opacity: 0.7; }
    }
    
    @media (max-width: 768px) {
      .wrap { padding: 16px; }
      header { flex-direction: column; text-align: center; }
      .brand { flex-direction: column; }
      .choices { gap: 8px; }
      .choice { padding: 12px 16px; }
    }
  </style>
</head>
<body>

  <div class="wrap">
    <header class="card" data-aos="fade-down">
      <div class="brand">
        <div class="logo" aria-hidden="true"></div>
        <div>
          <div class="title">🧪 درس 4-1 — النظام الغذائي</div>
          <div class="subtitle" id="studentMeta">مرحبًا! لنبدأ…</div>
          <div class="progress">
            <div>التقدّم:</div>
            <div class="bar"><span id="barFill"></span></div>
            <div><span id="countDone">0</span>/<span id="countTotal">0</span></div>
          </div>
        </div>
      </div>
      <a class="btn-ghost" href="../../index.html">← العودة</a>
    </header>

    <section class="card" style="margin-top:18px; position:relative" data-aos="zoom-in">
      <div class="pulse"></div>
      <h1>🎯 أهداف الدرس</h1>
      <p class="lead">مكوّنات النظام الغذائي المتوازن ودور المغذيات الكبرى والصغرى وكيفية قراءة الخيارات الغذائية.</p>
      <ul>
        <li>التفريق بين كربوهيدرات/دهون/بروتين ووظائفها الأساسية.</li>
        <li>أهمية الألياف والماء والفيتامينات والمعادن.</li>
        <li>مبادئ «الطبق المتوازن» وحساب السعرات من المغذّيات.</li>
      </ul>
      <div style="display:flex; gap:10px; flex-wrap:wrap">
        <button id="btnStart" class="btn">ابدأ النشاط</button>
      </div>
    </section>

    <section id="quiz" class="card" style="margin-top:16px; display:none" data-aos="fade-up">
      <h2>الأسئلة التفاعلية</h2>

      <!-- 20 سؤال -->
      <article class="q" data-qid="q1">
        <div><strong>1) من وظائف البروتين الأساسية:</strong></div>
        <div class="choices">
          <div class="choice" data-correct="true">النمو وبناء الأنسجة</div>
          <div class="choice" data-correct="false">تخزين طويل للطاقة فقط</div>
          <div class="choice" data-correct="false">تزويد الألياف</div>
          <div class="choice" data-correct="false">إمداد فيتامين د</div>
        </div>
      </article>

      <article class="q" data-qid="q2">
        <div><strong>2) المغذّي الأنسب للطاقة السريعة:</strong></div>
        <div class="choices">
          <div class="choice" data-correct="true">الكربوهيدرات</div>
          <div class="choice" data-correct="false">البروتين</div>
          <div class="choice" data-correct="false">الحديد</div>
          <div class="choice" data-correct="false">الكالسيوم</div>
        </div>
      </article>

      <article class="q" data-qid="q3">
        <div><strong>3) نقص فيتامين (د) قد يؤدي إلى:</strong></div>
        <div class="choices">
          <div class="choice" data-correct="true">الكساح/لين العظام</div>
          <div class="choice" data-correct="false">فقر دم فوري</div>
          <div class="choice" data-correct="false">قصور الغدة الدرقية</div>
          <div class="choice" data-correct="false">قِصر النظر</div>
        </div>
      </article>

      <article class="q" data-qid="q4">
        <div><strong>4) الألياف الغذائية تفيد في:</strong></div>
        <div class="choices">
          <div class="choice" data-correct="true">تحسين حركة الأمعاء والشعور بالشبع</div>
          <div class="choice" data-correct="false">رفع ضغط الدم</div>
          <div class="choice" data-correct="false">زيادة الكوليسترول</div>
          <div class="choice" data-correct="false">نقص الماء</div>
        </div>
      </article>

      <article class="q" data-qid="q5">
        <div><strong>5) مثال لمصدر دهون صحية غير مشبعة:</strong></div>
        <div class="choices">
          <div class="choice" data-correct="true">الأسماك الدهنية/المكسرات/زيت الزيتون</div>
          <div class="choice" data-correct="false">السمن الصناعي المتحوّل</div>
          <div class="choice" data-correct="false">الدهون المتحولة</div>
          <div class="choice" data-correct="false">الدهون المهدرجة</div>
        </div>
      </article>

      <article class="q" data-qid="q6">
        <div><strong>6) الحديد ضروري لـ:</strong></div>
        <div class="choices">
          <div class="choice" data-correct="true">تكوين الهيموغلوبين ونقل الأكسجين</div>
          <div class="choice" data-correct="false">إنتاج الأنسولين</div>
          <div class="choice" data-correct="false">صنع فيتامين سي</div>
          <div class="choice" data-correct="false">تحلل النشا</div>
        </div>
      </article>

      <article class="q" data-qid="q7">
        <div><strong>7) فيتامين (د) يساعد الجسم على:</strong></div>
        <div class="choices">
          <div class="choice" data-correct="true">امتصاص الكالسيوم وصحة العظام</div>
          <div class="choice" data-correct="false">تخزين الغلوكوز في العضلات</div>
          <div class="choice" data-correct="false">صنع الأحماض الأمينية</div>
          <div class="choice" data-correct="false">تكوين الألياف</div>
        </div>
      </article>

      <article class="q" data-qid="q8">
        <div><strong>8) من وظائف الماء في الجسم:</strong></div>
        <div class="choices">
          <div class="choice" data-correct="true">نقل المواد وتنظيم الحرارة</div>
          <div class="choice" data-correct="false">تزويد 9 سعرات/غرام</div>
          <div class="choice" data-correct="false">تخزين فيتامينات دائمة</div>
          <div class="choice" data-correct="false">بناء الهيموغلوبين</div>
        </div>
      </article>

      <article class="q" data-qid="q9">
        <div><strong>9) الاحتياج للطاقة (السعرات) يتأثر بـ:</strong></div>
        <div class="choices">
          <div class="choice" data-correct="true">العمر والجنس والوزن والنشاط</div>
          <div class="choice" data-correct="false">لون العين</div>
          <div class="choice" data-correct="false">فصيلة الدم فقط</div>
          <div class="choice" data-correct="false">طول الشعر</div>
        </div>
      </article>

      <article class="q" data-qid="q10">
        <div><strong>10) الصوديوم والبوتاسيوم يُسهمان في:</strong></div>
        <div class="choices">
          <div class="choice" data-correct="true">توازن السوائل ووظيفة الأعصاب والعضلات</div>
          <div class="choice" data-correct="false">تصبغ الجلد</div>
          <div class="choice" data-correct="false">تخزين الدهون</div>
          <div class="choice" data-correct="false">إنتاج فيتامينات</div>
        </div>
      </article>

      <article class="q" data-qid="q11">
        <div><strong>11) لتعزيز امتصاص الحديد من المصادر النباتية يُفضّل تناوله مع:</strong></div>
        <div class="choices">
          <div class="choice" data-correct="true">فيتامين (ج) (حمضيّات/فلفل)</div>
          <div class="choice" data-correct="false">الماء فقط</div>
          <div class="choice" data-correct="false">الألياف بكثرة</div>
          <div class="choice" data-correct="false">الملح</div>
        </div>
      </article>

      <article class="q" data-qid="q12">
        <div><strong>12) الإفراط في الصوديوم يرتبط بـ:</strong></div>
        <div class="choices">
          <div class="choice" data-correct="true">ارتفاع ضغط الدم</div>
          <div class="choice" data-correct="false">فقر الدم</div>
          <div class="choice" data-correct="false">انخفاض حرارة الجسم</div>
          <div class="choice" data-correct="false">زيادة البصر</div>
        </div>
      </article>

      <article class="q" data-qid="q13">
        <div><strong>13) الكربوهيدرات المعقّدة الأفضل للصحة غالبًا:</strong></div>
        <div class="choices">
          <div class="choice" data-correct="true">الحبوب الكاملة (أرز بني/شوفان)</div>
          <div class="choice" data-correct="false">السكر الأبيض</div>
          <div class="choice" data-correct="false">الحلوى فقط</div>
          <div class="choice" data-correct="false">المشروبات المحلّاة</div>
        </div>
      </article>

      <article class="q" data-qid="q14">
        <div><strong>14) وجبة تحوي 50غ كربوهيدرات، 10غ دهون، 20غ بروتين. مجموع السعرات ≈</strong></div>
        <div class="choices">
          <div class="choice" data-correct="true">370 ك.سعرة</div>
          <div class="choice" data-correct="false">330 ك.سعرة</div>
          <div class="choice" data-correct="false">410 ك.سعرة</div>
          <div class="choice" data-correct="false">290 ك.سعرة</div>
        </div>
      </article>

      <article class="q" data-qid="q15">
        <div><strong>15) في «الطبق المتوازن» يُفضّل أن تُشكّل الخضار والفاكهة:</strong></div>
        <div class="choices">
          <div class="choice" data-correct="true">نصف الطبق تقريبًا</div>
          <div class="choice" data-correct="false">الطبق كاملًا</div>
          <div class="choice" data-correct="false">ربع الطبق فقط</div>
          <div class="choice" data-correct="false">لا شيءَ منها</div>
        </div>
      </article>

      <article class="q" data-qid="q16">
        <div><strong>16) لكل غرام دهون:</strong></div>
        <div class="choices">
          <div class="choice" data-correct="true">≈ 9 ك.سعرة</div>
          <div class="choice" data-correct="false">≈ 4 ك.سعرة</div>
          <div class="choice" data-correct="false">≈ 0 ك.سعرة</div>
          <div class="choice" data-correct="false">≈ 2 ك.سعرة</div>
        </div>
      </article>

      <article class="q" data-qid="q17">
        <div><strong>17) مصدر جيّد لأحماض أوميغا-3:</strong></div>
        <div class="choices">
          <div class="choice" data-correct="true">الأسماك الدهنية (سلمون/سردين)</div>
          <div class="choice" data-correct="false">السكر البني</div>
          <div class="choice" data-correct="false">المعكرونة البيضاء</div>
          <div class="choice" data-correct="false">المشروبات الغازية</div>
        </div>
      </article>

      <article class="q" data-qid="q18">
        <div><strong>18) عدم تحمّل اللاكتوز يعني:</strong></div>
        <div class="choices">
          <div class="choice" data-correct="true">صعوبة هضم سكر الحليب لنقص إنزيم اللاكتاز</div>
          <div class="choice" data-correct="false">حساسية سمكية</div>
          <div class="choice" data-correct="false">عدم تحمل الغلوتين</div>
          <div class="choice" data-correct="false">نقص الحديد</div>
        </div>
      </article>

      <article class="q" data-qid="q19">
        <div><strong>19) أي الوجبات التالية أقرب لوجبة متوازنة؟</strong></div>
        <div class="choices">
          <div class="choice" data-correct="true">أرز بني + دجاج مشوي + سلطة خضراء + لبن زبادي</div>
          <div class="choice" data-correct="false">بطاطس مقلية فقط</div>
          <div class="choice" data-correct="false">حلوى ومشروب غازي</div>
          <div class="choice" data-correct="false">خبز أبيض فقط</div>
        </div>
      </article>

      <article class="q" data-qid="q20">
        <div><strong>20) أي مما يلي يُعد من «المغذّيات الصغرى»؟</strong></div>
        <div class="choices">
          <div class="choice" data-correct="true">الفيتامينات والمعادن</div>
          <div class="choice" data-correct="false">الكربوهيدرات</div>
          <div class="choice" data-correct="false">الدهون</div>
          <div class="choice" data-correct="false">البروتين</div>
        </div>
      </article>

      <div style="display:flex; gap:10px; margin-top:8px">
        <button id="btnSubmit" class="btn">إنهاء النشاط</button>
        <button id="btnReset" class="btn-ghost">إعادة تعيين</button>
      </div>
    </section>

    <footer class="card" data-aos="fade-up" data-aos-delay="50">
      <div><span class="credit">🎨 تصميم: الوتين الضامرية |لمار السيابية|مها المعمرية|مريم محمود البلوشية|مريم وائل البلوشية| — 🏫 مدرسة عاتكة بنت زيد — تحت إشراف الأستاذة سامية 👩‍🏫</span></div>
      <div>© انشطة تعليمية الوتين 🌟</div>
    </footer>
  </div>

  <script>
    AOS.init({ duration: 700, once: true });

    const el = {
      start: document.getElementById('btnStart'),
      quiz: document.getElementById('quiz'),
      submit: document.getElementById('btnSubmit'),
      reset: document.getElementById('btnReset'),
      meta: document.getElementById('studentMeta'),
      bar: document.getElementById('barFill'),
      done: document.getElementById('countDone'),
      total: document.getElementById('countTotal')
    };

    const storageKey = "watyn_bio_student";
    function getStudent(){ try{ return JSON.parse(localStorage.getItem(storageKey)) || null }catch{ return null } }
    function setStudent(obj){ localStorage.setItem(storageKey, JSON.stringify(obj)); }

    async function askStudent(){
      const { value: formValues } = await Swal.fire({
        title: 'مرحبًا 👋',
        html:
          `<div style="text-align:right">
            <div style="margin-bottom:8px;font-weight:700">أدخل بياناتك لبدء النشاط:</div>
            <input id="swal-name" class="swal2-input" placeholder="اسم الطالب/ـة">
            <input id="swal-class" class="swal2-input" placeholder="الصف (مثال: التاسع/1)">
          </div>`,
        focusConfirm: false,
        confirmButtonText: 'ابدأ',
        confirmButtonColor: '#d97706',
        showCancelButton: true,
        cancelButtonText: 'إلغاء',
        preConfirm: () => {
          const name = document.getElementById('swal-name').value?.trim();
          const klass = document.getElementById('swal-class').value?.trim();
          if(!name || !klass){
            Swal.showValidationMessage('يرجى إدخال الاسم والصف');
            return false;
          }
          return { name, klass };
        }
      });
      if(formValues){
        setStudent(formValues);
        updateMeta();
        el.quiz.style.display = "block";
        gsap.from("#quiz .q", {opacity:0, y:10, stagger:.08, duration:.5});
        // تهيئة شريط التقدّم
        document.getElementById('countTotal').textContent = document.querySelectorAll('.q[data-qid]').length;
        document.getElementById('countDone').textContent = 0;
        el.bar.style.width = '0%';
      }
    }

    function updateMeta(){
      const s = getStudent();
      el.meta.textContent = s ? (`الطالب/ـة: ${s.name} — الصف: ${s.klass}`) : "مرحبًا! لنبدأ…";
    }

    // شريط التقدّم: أي اختيار (صحيح أو خاطئ) يُعدّ إجابة
    function updateProgress(){
      const total = document.querySelectorAll('.q[data-qid]').length;
      const answered = Array.from(document.querySelectorAll('.q')).filter(q =>
        q.querySelector('.choice.correct, .choice.wrong')
      ).length;
      el.total.textContent = total;
      el.done.textContent = answered;
      el.bar.style.width = Math.round((answered/total)*100) + '%';
    }

    document.addEventListener('click', (e)=>{
      const choice = e.target.closest('.choice');
      if(!choice) return;
      const container = choice.closest('.choices');
      container.querySelectorAll('.choice').forEach(c=> c.classList.remove('correct','wrong'));
      if(choice.dataset.correct === "true"){
        choice.classList.add('correct');
        gsap.fromTo(choice, {scale:1}, {scale:1.03, y:-2, duration:.18, yoyo:true, repeat:1});
      }else{
        choice.classList.add('wrong');
        gsap.fromTo(choice, {x:0}, {x:-6, duration:.06, yoyo:true, repeat:5});
      }
      updateProgress();
    });

    function computeScore(){
      const blocks = Array.from(document.querySelectorAll('.q[data-qid]'));
      let correct = 0;
      blocks.forEach(b=>{ if(b.querySelector('.choice.correct')) correct++; });
      return { correct, total: blocks.length, percent: Math.round((correct/blocks.length)*100) };
    }

    function celebrate(){
      const duration = 1500; const end = Date.now() + duration;
      (function frame(){
        confetti({ particleCount: 3, angle: 60, spread: 70, origin: { x: 0 } });
        confetti({ particleCount: 3, angle: 120, spread: 70, origin: { x: 1 } });
        if (Date.now() < end) requestAnimationFrame(frame);
      })();
    }

    el.start.addEventListener('click', askStudent);

    el.submit.addEventListener('click', ()=>{
      const s = getStudent();
      const { correct, total, percent } = computeScore();
      celebrate();
      Swal.fire({
        title: 'أحسنت يا بطل/ة! 🎉',
        html: `
          <div style="text-align:right;line-height:1.9">
            <div><strong>الاسم:</strong> ${s?.name || '-'} </div>
            <div><strong>الصف:</strong> ${s?.klass || '-'} </div>
            <div><strong>درجتك:</strong> ${correct} / ${total} — <strong>${percent}%</strong></div>
          </div>`,
        icon: 'success',
        confirmButtonText: 'إعادة المحاولة',
        confirmButtonColor: '#10b981',
        showDenyButton: true,
        denyButtonText: 'العودة',
        denyButtonColor: '#d97706'
      }).then(res=>{ if(res.isConfirmed) resetQuiz(); });
    });

    function resetQuiz(){
      document.querySelectorAll('.choice').forEach(c=> c.classList.remove('correct','wrong'));
      gsap.from("#quiz .q", {opacity:0, y:10, stagger:.08, duration:.45});
      window.scrollTo({ top:0, behavior:'smooth' });
      el.done.textContent = 0; el.bar.style.width = '0%';
    }

    // تهيئة أولية
    updateMeta();
    document.getElementById('countTotal').textContent = document.querySelectorAll('.q[data-qid]').length;
  </script>


  <script>
    // إضافة الأنظمة الذكية للدرس
    const storageKey = "watyn_bio_student";
    let totalAnswered = 0;
    let consecutiveCorrect = 0;
    let startTime = Date.now();

    const el = {
      start: document.getElementById('btnStart'),
      quiz: document.getElementById('quiz'),
      submit: document.getElementById('btnSubmit'),
      reset: document.getElementById('btnReset'),
      meta: document.getElementById('studentMeta'),
      bar: document.getElementById('barFill'),
      done: document.getElementById('countDone'),
      total: document.getElementById('countTotal')
    };

    function getStudent(){ 
      try{ 
        return JSON.parse(localStorage.getItem(storageKey)) || null;
      } catch { 
        return null;
      } 
    }
    
    function setStudent(obj){ 
      localStorage.setItem(storageKey, JSON.stringify(obj)); 
    }

    function updateMeta(){
      const s = getStudent();
      if (el.meta) {
        el.meta.textContent = s ? (`الطالب/ـة: ${s.name} — الصف: ${s.klass}`) : "مرحبًا! لنبدأ…";
      }
    }

    function updateProgress(){
      const total = document.querySelectorAll('.q[data-qid]').length;
      const answered = Array.from(document.querySelectorAll('.q')).filter(q => 
        q.querySelector('.choice.correct, .choice.wrong')
      ).length;
      
      if (el.total) el.total.textContent = total;
      if (el.done) el.done.textContent = answered;
      if (el.bar) {
        const percentage = Math.round((answered/total)*100);
        el.bar.style.width = percentage + '%';
      }
      
      if (answered > 0) {
        SoundSystem.play('progress');
      }
    }

    function computeScore(){
      const blocks = Array.from(document.querySelectorAll('.q[data-qid]'));
      let correct = 0;
      blocks.forEach(b => { 
        const sel = b.querySelector('.choice.correct'); 
        if(sel) correct++; 
      });
      return { correct, total: blocks.length, percent: Math.round((correct/blocks.length)*100) };
    }

    async function askStudent(){
      const { value: formValues } = await Swal.fire({
        title: 'مرحبًا 👋',
        html: `<div style="text-align:right">
          <div style="margin-bottom:8px;font-weight:700">أدخل بياناتك لبدء النشاط:</div>
          <input id="swal-name" class="swal2-input" placeholder="اسم الطالب/ـة">
          <input id="swal-class" class="swal2-input" placeholder="الصف (مثال: التاسع/1)">
        </div>`,
        focusConfirm: false,
        confirmButtonText: 'ابدأ',
        confirmButtonColor: '#d97706',
        showCancelButton: true,
        cancelButtonText: 'إلغاء',
        preConfirm: () => {
          const name = document.getElementById('swal-name').value?.trim();
          const klass = document.getElementById('swal-class').value?.trim();
          if(!name || !klass){
            Swal.showValidationMessage('يرجى إدخال الاسم والصف');
            return false;
          }
          return { name, klass };
        }
      });
      
      if(formValues){
        setStudent(formValues);
        updateMeta();
        EnhancedNotificationSystem.initForStudent(formValues);
        
        if (el.quiz) {
          el.quiz.style.display = "block";
          gsap.from("#quiz .q", {opacity:0, y:10, stagger:.08, duration:.5});
        }
        
        totalAnswered = 0;
        consecutiveCorrect = 0;
        startTime = Date.now();
      }
    }

    function resetQuiz(){
      document.querySelectorAll('.choice').forEach(c => c.classList.remove('correct','wrong'));
      totalAnswered = 0;
      consecutiveCorrect = 0;
      startTime = Date.now();
      updateProgress();
      gsap.from("#quiz .q", {opacity:0, y:10, stagger:.05, duration:.45});
      window.scrollTo({ top:0, behavior:'smooth' });
    }

    // نظام الأحداث الذكي
    document.addEventListener('click', (e) => {
      const choice = e.target.closest('.choice');
      if(!choice) return;
      
      SoundSystem.play('click');
      
      const container = choice.closest('.choices');
      const wasAnswered = container.querySelector('.choice.correct, .choice.wrong');
      
      if (wasAnswered) return;
      
      container.querySelectorAll('.choice').forEach(c => c.classList.remove('correct','wrong'));
      totalAnswered++;
      
      if(choice.dataset.correct === "true"){
        choice.classList.add('correct');
        consecutiveCorrect++;
        SoundSystem.play('correct');
        
        gsap.fromTo(choice, 
          {scale:1}, 
          {scale:1.05, y:-4, duration:.3, yoyo:true, repeat:1, ease: "back.out(1.7)"}
        );
        
        if (consecutiveCorrect >= 3) {
          setTimeout(() => showEncouragementMessage('correct'), 800);
          consecutiveCorrect = 0;
        }
      } else {
        choice.classList.add('wrong');
        consecutiveCorrect = 0;
        SoundSystem.play('wrong');
        
        gsap.fromTo(choice, {x:0}, {x:-8, duration:.08, yoyo:true, repeat:6, ease: "power2.inOut"});
        
        if (totalAnswered >= 3) {
          setTimeout(() => showEncouragementMessage('wrong'), 1000);
        }
      }
      
      updateProgress();
    });

    // تهيئة الأحداث
    if (el.start) el.start.addEventListener('click', askStudent);

    if (el.submit) {
      el.submit.addEventListener('click', () => {
        const s = getStudent();
        const { correct, total, percent } = computeScore();
        celebrate();
        
        const performanceLevel = getPerformanceLevel(percent);
        const smartMessage = getFinalResultMessage(percent, s?.name);
        
        let resultIcon = 'success';
        let resultColor = '#10b981';
        
        if (percent < 60) {
          resultIcon = 'info';
          resultColor = '#3b82f6';
        }
        
        SoundSystem.play('complete');
        
        Swal.fire({
          title: `${performanceLevel === 'excellent' ? '🏆' : performanceLevel === 'good' ? '⭐' : performanceLevel === 'average' ? '👍' : '💪'} النتائج النهائية`,
          html: `
            <div style="text-align:right;line-height:1.9;font-size:16px">
              <div style="margin-bottom:10px"><strong>👤 الاسم:</strong> ${s?.name || 'غير محدد'}</div>
              <div style="margin-bottom:10px"><strong>🏫 الصف:</strong> ${s?.klass || 'غير محدد'}</div>
              <div style="margin-bottom:10px"><strong>📊 النتيجة:</strong> ${correct} من ${total} سؤال</div>
              <div style="margin-bottom:15px"><strong>📈 النسبة المئوية:</strong> ${percent}%</div>
              <hr style="margin: 15px 0; border: none; height: 1px; background: linear-gradient(to right, transparent, #ddd, transparent);">
              <div style="background: linear-gradient(135deg, #fef3c7 0%, #fde68a 100%);padding:15px;border-radius:12px;font-weight:600;color:#92400e;text-align:center">
                ${smartMessage}
              </div>
            </div>`,
          icon: resultIcon,
          width: '500px',
          confirmButtonText: '🔄 إعادة المحاولة',
          confirmButtonColor: resultColor,
          showDenyButton: true,
          denyButtonText: '🏠 العودة للرئيسية',
          denyButtonColor: '#d97706',
          allowOutsideClick: false,
          allowEscapeKey: false
        }).then(res => {
          if(res.isConfirmed) {
            resetQuiz();
          } else if (res.isDenied) {
            window.location.href='../../index.html';
          }
        });
      });
    }

    if (el.reset) el.reset.addEventListener('click', resetQuiz);

    // تهيئة الصفحة
    updateMeta();
    
    AOS.init({
      duration: 700,
      easing: 'ease',
      once: true,
      offset: 50
    });
    
    if (document.getElementById('countTotal')) {
      document.getElementById('countTotal').textContent = document.querySelectorAll('.q[data-qid]').length;
    }
    
    updateProgress();
    
    console.log('✅ تم تحميل الصفحة مع جميع الأنظمة الذكية');
  </script>
</body>
</html>